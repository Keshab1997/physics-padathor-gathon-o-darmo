// script.js (ржкрж░рж┐ржорж╛рж░рзНржЬрж┐ржд ржПржмржВ ржоржирзНрждржмрзНржпрж╕рж╣)

// ржЧрзНрж▓рзЛржмрж╛рж▓ ржнрзНржпрж╛рж░рж┐ржпрж╝рзЗржмрж▓
let currentQuestionIndex = 0;
let selectedAnswer = null; // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржХрзЛржирзЛ ржЙрждрзНрждрж░ рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзЗржЫрзЗ ржХрж┐ржирж╛ рждрж╛ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рзЗ
let correctCount = 0;
let wrongCount = 0;
let userAnswers = []; // ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНрж░рж╢рзНржирзЗрж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЙрждрзНрждрж░ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗ
let shuffledOptionsPerQuestion = []; // ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНрж░рж╢рзНржирзЗрж░ ржЬржирзНржп ржЕржкрж╢ржирзЗрж░ ржПрж▓рзЛржорзЗрж▓рзЛ ржХрзНрж░ржо рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗ
let timerInterval;

// рж╕рж╛ржЙржирзНржб ржПржлрзЗржХрзНржЯ
let correctSound = new Audio("../sounds/correct.mp3");
let wrongSound = new Audio("../sounds/wrong.mp3");

// ржПржХржЯрж┐ ржЕрзНржпрж╛рж░рзЗрж░ ржЙржкрж╛ржжрж╛ржи ржПрж▓рзЛржорзЗрж▓рзЛ ржХрж░рж╛рж░ ржЬржирзНржп ржлрж╛ржВрж╢ржи (Fisher-Yates Shuffle)
function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}

// ржХрзБржЗржЬрзЗрж░ ржЯрж╛ржЗржорж╛рж░ рж╢рзБрж░рзБ ржПржмржВ ржкрж░рж┐ржЪрж╛рж▓ржирж╛ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
function startTimer() {
  let seconds = 0;
  let minutes = 0;
  clearInterval(timerInterval); // ржкрзБрж░ржирзЛ ржЯрж╛ржЗржорж╛рж░ ржмржирзНржз ржХрж░рж╛

  function updateTimer() {
    seconds++;
    if (seconds === 60) {
      seconds = 0;
      minutes++;
    }
    const formattedTime = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
    document.getElementById("timer").textContent = formattedTime;
  }
  document.getElementById("timer").textContent = "00:00"; // ржЯрж╛ржЗржорж╛рж░ рж░рж┐рж╕рзЗржЯ
  timerInterval = setInterval(updateTimer, 1000);
}

// ржмрж░рзНрждржорж╛ржи ржкрзНрж░рж╢рзНржиржЯрж┐ рж╕рзНржХрзНрж░рж┐ржирзЗ ржжрзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи
function showQuestion() {
  selectedAnswer = null;
  startTimer();
  const container = document.getElementById("quiz-container");
  const q = quizSet.questions[currentQuestionIndex];
  
  // ржЕржкрж╢ржиржЧрзБрж▓рзЛ ржПрж▓рзЛржорзЗрж▓рзЛ ржХрж░рж╛ ржПржмржВ рж╕ржарж┐ржХ ржЙрждрзНрждрж░рзЗрж░ ржирждрзБржи ржЕржмрж╕рзНржерж╛ржи ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛
  let shuffledOptions = [...q.options];
  shuffleArray(shuffledOptions);
  shuffledOptionsPerQuestion[currentQuestionIndex] = shuffledOptions;
  const correctAnswerIndex = shuffledOptions.indexOf(q.options[q.answer]);

  container.innerHTML = `
    <div class="mb-4">
      <h2 class="text-xl md:text-2xl font-semibold mb-6 text-center">ржкрзНрж░рж╢рзНржи ${currentQuestionIndex + 1}: ${q.question}</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        ${shuffledOptions.map((opt, i) => `
          <button class="option-btn" onclick="selectAnswer(${i}, ${correctAnswerIndex})" data-index="${i}">
            <span class="option-prefix">${String.fromCharCode(65 + i)}.</span>
            <span>${opt}</span>
          </button>
        `).join("")}
      </div>
    </div>
    <button id="nextBtn" onclick="nextQuestion()" class="action-btn w-full mt-6" disabled>ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржи</button>`;
}

// ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржпржЦржи ржХрзЛржирзЛ ржЙрждрзНрждрж░ рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзЗ, рждржЦржи ржПржЗ ржлрж╛ржВрж╢ржиржЯрж┐ ржХрж╛ржЬ ржХрж░рзЗ
window.selectAnswer = function (selectedIndex, correctBtnIndex) {
  if (selectedAnswer !== null) return; // ржПржХржмрж╛рж░ ржЙрждрзНрждрж░ ржжрж┐рж▓рзЗ ржЖрж░ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛

  clearInterval(timerInterval); // ржЙрждрзНрждрж░ ржжрзЗржУрзЯрж╛рж░ рж╕рж╛ржерзЗ рж╕рж╛ржерзЗ ржЯрж╛ржЗржорж╛рж░ ржмржирзНржз
  selectedAnswer = selectedIndex;
  userAnswers[currentQuestionIndex] = selectedIndex; // рж░рж┐ржнрж┐ржЙ ржПрж░ ржЬржирзНржп ржЙрждрзНрждрж░ рж╕ржВрж░ржХрзНрж╖ржг

  // рж╕ржм ржЕржкрж╢ржи ржмрж╛ржЯржи ржирж┐рж╖рзНржХрзНрж░рж┐ржпрж╝ ржХрж░рж╛
  document.querySelectorAll(".option-btn").forEach((btn) => (btn.disabled = true));
  
  const correctBtn = document.querySelector(`[data-index="${correctBtnIndex}"]`);
  correctBtn.classList.add("correct");

  if (selectedIndex !== correctBtnIndex) {
    const wrongBtn = document.querySelector(`[data-index="${selectedIndex}"]`);
    wrongBtn.classList.add("incorrect");
    wrongCount++;
    wrongSound.play();
  } else {
    correctCount++;
    correctSound.play();
  }

  // рж╕рзНржХрзЛрж░ржмрзЛрж░рзНржб ржЖржкржбрзЗржЯ ржХрж░рж╛
  document.getElementById("correct-count").textContent = `тЬФя╕П ${correctCount}`;
  document.getElementById("wrong-count").textContent = `тЭМ ${wrongCount}`;
  
  // 'ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржи' ржмрж╛ржЯржи рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рж╛
  document.getElementById("nextBtn").disabled = false;
  document.getElementById("nextBtn").focus();
};

// ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╢рзНржирзЗ ржпрж╛ржУрзЯрж╛рж░ ржлрж╛ржВрж╢ржи
function nextQuestion() {
  if (selectedAnswer === null) return;
  currentQuestionIndex++;
  selectedAnswer = null;

  if (currentQuestionIndex < quizSet.questions.length) {
    showQuestion();
  } else {
    showFinalResult(); // рж╕ржм ржкрзНрж░рж╢рзНржи рж╢рзЗрж╖ рж╣рж▓рзЗ ржлрж▓рж╛ржлрж▓ ржжрзЗржЦрж╛ржирзЛ
  }
}

// ржХрзБржЗржЬ рж╢рзЗрж╖рзЗ ржЪрзВрзЬрж╛ржирзНржд ржлрж▓рж╛ржлрж▓ ржжрзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи
function showFinalResult() {
  clearInterval(timerInterval);
  const container = document.getElementById("quiz-container");
  container.innerHTML = `
    <div class="text-center space-y-5">
      <h2 class="text-3xl font-bold text-green-600">ЁЯОЙ ржХрзБржЗржЬ рж╢рзЗрж╖!</h2>
      <p class="text-xl">ржЖржкржирж╛рж░ рж╕рзНржХрзЛрж░: <strong class="text-blue-600">${correctCount}</strong> / ${quizSet.questions.length}</p>
      <div class="flex flex-wrap justify-center gap-3">
        <button onclick="showReview()" class="action-btn">рж░рж┐ржнрж┐ржЙ ржжрзЗржЦрзБржи</button>
        <button onclick="saveScore()" class="action-btn green">рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржбрзЗ ржпрзЛржЧ ржХрж░рзБржи</button>
        <button onclick="location.reload()" class="action-btn gray">ЁЯФБ ржЖржмрж╛рж░ ржжрж┐ржи</button>
      </div>
    </div>`;
}

// ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржжрзЗржУрзЯрж╛ ржЙрждрзНрждрж░ржЧрзБрж▓рзЛ ржкрж░рзНржпрж╛рж▓рзЛржЪржирж╛рж░ ржЬржирзНржп ржжрзЗржЦрж╛ржирзЛрж░ ржлрж╛ржВрж╢ржи
function showReview() {
  const container = document.getElementById("quiz-container");
  let reviewHTML = `<div class="space-y-4"><h2 class="text-2xl font-bold text-center text-blue-700 mb-4">ЁЯУЪ ржХрзБржЗржЬ рж░рж┐ржнрж┐ржЙ</h2>`;
  
  for (let i = 0; i < quizSet.questions.length; i++) {
    const q = quizSet.questions[i];
    const userAnswerIndex = userAnswers[i];
    const shuffledOptions = shuffledOptionsPerQuestion[i];
    const correctAnswerIndex = shuffledOptions.indexOf(q.options[q.answer]);
    let isCorrect = userAnswerIndex === correctAnswerIndex;
    let cardClass = isCorrect ? "review-correct" : "review-incorrect";
    
    reviewHTML += `
      <div class="review-card text-left ${cardClass}">
        <h3 class="font-semibold mb-2">ЁЯУЭ ржкрзНрж░рж╢рзНржи ${i + 1}: ${q.question}</h3>
        <p><strong>рж╕ржарж┐ржХ ржЙрждрзНрждрж░:</strong> ${q.options[q.answer]}</p>`;
    
    if (userAnswerIndex !== undefined) {
      reviewHTML += `<p><strong>ржЖржкржирж╛рж░ ржЙрждрзНрждрж░:</strong> <span class="font-bold ${isCorrect ? 'text-green-700' : 'text-red-700'}">${shuffledOptions[userAnswerIndex]}</span></p>`;
    } else {
        reviewHTML += `<p><strong>ржЖржкржирж╛рж░ ржЙрждрзНрждрж░:</strong> <span class="font-bold text-gray-500">ржЖржкржирж┐ ржЙрждрзНрждрж░ ржжрзЗржиржирж┐</span></p>`;
    }
    reviewHTML += `<p class="mt-2"><strong>ржмрзНржпрж╛ржЦрзНржпрж╛:</strong> ${q.explanation || "ржХрзЛржирзЛ ржмрзНржпрж╛ржЦрзНржпрж╛ ржирзЗржЗ"}</p></div>`;
  }
  reviewHTML += `<div class="text-center mt-6"><button onclick="location.reload()" class="action-btn gray">ЁЯФБ ржЖржмрж╛рж░ ржжрж┐ржи</button></div></div>`;
  container.innerHTML = reviewHTML;
}

// ===============================================
// --- рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб рж╕рзЗржХрж╢ржи ---
// ===============================================

function saveScore() {
    // ржЖржЧрзЗрж░ рж╕рзЗрж╢ржи ржерзЗржХрзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржирж╛ржо рж▓рзЛржб ржХрж░рж╛ рж╣рзЯ, ржпрж╛рждрзЗ ржмрж╛рж░ржмрж╛рж░ ржирж╛ржо ржЯрж╛ржЗржк ржХрж░рждрзЗ ржирж╛ рж╣рзЯ
    let name = prompt("рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржбрзЗ ржпрзЛржЧ ржХрж░рж╛рж░ ржЬржирзНржп ржЖржкржирж╛рж░ ржирж╛ржо ржжрж┐ржи:", localStorage.getItem("quizUserName") || "");
    if (name && name.trim() !== "") {
        const userName = name.trim();
        localStorage.setItem("quizUserName", userName); // ржнржмрж┐рж╖рзНржпрждрзЗ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп ржирж╛ржо рж╕рзЗржн ржХрж░рж╛

        // `comprehensiveLeaderboard` ржЕржмржЬрзЗржХрзНржЯрзЗ рж╕ржм ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ рж╕рзНржХрзЛрж░ рж░рж╛ржЦрж╛ рж╣рзЯ
        const comprehensiveLeaderboard = JSON.parse(localStorage.getItem('comprehensiveLeaderboard') || '{}');

        // ржпржжрж┐ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржирждрзБржи рж╣рзЯ, рждрж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯ
        if (!comprehensiveLeaderboard[userName]) {
            comprehensiveLeaderboard[userName] = { totalScore: 0, scores: {} };
        }

        // ржмрж░рзНрждржорж╛ржи ржХрзБржЗржЬрзЗрж░ рж╕рзНржХрзЛрж░ ржпрзЛржЧ ржмрж╛ ржЖржкржбрзЗржЯ ржХрж░рж╛
        const quizSetName = quizSet.name;
        comprehensiveLeaderboard[userName].scores[quizSetName] = correctCount;

        // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржорзЛржЯ рж╕рзНржХрзЛрж░ ржЖржмрж╛рж░ ржЧржгржирж╛ ржХрж░рж╛
        let total = 0;
        for (const score of Object.values(comprehensiveLeaderboard[userName].scores)) {
            total += score;
        }
        comprehensiveLeaderboard[userName].totalScore = total;

        localStorage.setItem('comprehensiveLeaderboard', JSON.stringify(comprehensiveLeaderboard));
        showLeaderboard();
    }
}

function showLeaderboard() {
    const comprehensiveLeaderboard = JSON.parse(localStorage.getItem('comprehensiveLeaderboard') || '{}');
    
    // рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржбржХрзЗ ржорзЛржЯ рж╕рзНржХрзЛрж░рзЗрж░ ржнрж┐рждрзНрждрж┐рждрзЗ ржмрзЬ ржерзЗржХрзЗ ржЫрзЛржЯ ржХрзНрж░ржорзЗ рж╕рж╛ржЬрж╛ржирзЛ
    const sortedLeaderboard = Object.entries(comprehensiveLeaderboard)
        .map(([name, data]) => ({ name, ...data }))
        .sort((a, b) => b.totalScore - a.totalScore)
        .slice(0, 10); // рж╕рзЗрж░рж╛ рззрзж ржЬржиржХрзЗ ржжрзЗржЦрж╛ржирзЛ

    let leaderboardHTML = `<div class="text-center space-y-4">
        <h2 class="text-2xl font-bold text-purple-700">ЁЯПЖ рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб ЁЯПЖ</h2>`;

    if (sortedLeaderboard.length === 0) {
        leaderboardHTML += `<p class="text-gray-500">рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб ржПржЦржирзЛ ржЦрж╛рж▓рж┐!</p>`;
    } else {
        leaderboardHTML += `<ol class="leaderboard-list">`;
        sortedLeaderboard.forEach((user, index) => {
            leaderboardHTML += `<li class="leaderboard-item">
                <div class="main-score">
                    <span>${index + 1}. ${user.name}</span>
                    <strong>ржорзЛржЯ рж╕рзНржХрзЛрж░: ${user.totalScore}</strong>
                </div>
                <ul class="details-list">`;
            for (const [setName, score] of Object.entries(user.scores)) {
                leaderboardHTML += `<li>${setName}: <strong>${score}</strong></li>`;
            }
            leaderboardHTML += `</ul></li>`;
        });
        leaderboardHTML += `</ol>`;
    }

    leaderboardHTML += `<div class="flex flex-wrap justify-center gap-3 mt-6">
        <button onclick="showReview()" class="action-btn green">ЁЯУЦ рж░рж┐ржнрж┐ржЙ ржжрзЗржЦрзБржи</button>
        <button onclick="resetLeaderboard()" class="action-btn gray">рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб рж░рж┐рж╕рзЗржЯ ржХрж░рзБржи</button>
        <button onclick="location.reload()" class="action-btn">ЁЯФБ ржЖржмрж╛рж░ ржЦрзЗрж▓рзБржи</button>
    </div></div>`;
    document.getElementById("quiz-container").innerHTML = leaderboardHTML;
}

function resetLeaderboard() {
    if (confirm("ржЖржкржирж┐ ржХрж┐ рж╕ржорзНржкрзВрж░рзНржг рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб ржорзБржЫрзЗ ржлрзЗрж▓рждрзЗ ржЪрж╛ржи? ржПржЯрж┐ рж╕ржм ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржбрзЗржЯрж╛ ржорзБржЫрзЗ ржжрзЗржмрзЗред")) {
        localStorage.removeItem("comprehensiveLeaderboard");
        showLeaderboard();
    }
}

// ===============================================
// --- ржХрзБржЗржЬ рж╢рзБрж░рзБ ржПржмржВ ржХрзА-ржмрзЛрж░рзНржб ржлрж╛ржВрж╢ржи ---
// ===============================================

// ржХрзА-ржмрзЛрж░рзНржб ржжрж┐рзЯрзЗ ржЙрждрзНрждрж░ ржжрзЗржУрзЯрж╛рж░ рж╕рзБржмрж┐ржзрж╛
function setupKeyboard() {
  document.addEventListener("keydown", function (event) {
    if (document.activeElement.tagName === 'INPUT' || document.activeElement.tagName === 'TEXTAREA') return;
    
    if (event.key === "Enter" && document.getElementById("nextBtn") && !document.getElementById("nextBtn").disabled) {
      nextQuestion();
    }

    if (selectedAnswer === null) {
      const keyMap = {'1': 0, '2': 1, '3': 2, '4': 3, 'a': 0, 'b': 1, 'c': 2, 'd': 3};
      const lowerCaseKey = event.key.toLowerCase();
      if (keyMap.hasOwnProperty(lowerCaseKey)) {
        event.preventDefault();
        const buttons = document.querySelectorAll(".option-btn");
        const index = keyMap[lowerCaseKey];
        if (index < buttons.length) {
          buttons[index].click();
        }
      }
    }
  });
}

// ржкрзЗржЬ рж▓рзЛржб рж╣ржУрзЯрж╛рж░ ржкрж░ ржХрзБржЗржЬ рж╢рзБрж░рзБ ржХрж░рж╛
document.addEventListener("DOMContentLoaded", () => {
  if (typeof quizSet !== "undefined") {
    document.getElementById("quiz-title").textContent = quizSet.name;
    shuffleArray(quizSet.questions); // ржкрзНрж░рждрж┐ржмрж╛рж░ ржкрзНрж░рж╢рзНржиржЧрзБрж▓рзЛржУ ржПрж▓рзЛржорзЗрж▓рзЛ ржХрж░рж╛ рж╣рзЯ
    showQuestion();
    setupKeyboard();
  } else {
    document.getElementById("quiz-container").innerHTML = "<p class='text-red-600 font-bold text-center'>ржжрзБржГржЦрж┐ржд, ржкрзНрж░рж╢рзНржи рж╕рзЗржЯ рж▓рзЛржб ржХрж░рж╛ ржпрж╛ржпрж╝ржирж┐ред</p>";
  }
});
